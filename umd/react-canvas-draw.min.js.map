{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d40b1113758e69b41624","webpack:///./node_modules/lazy-brush/lib/LazyPoint.js","webpack:///./node_modules/lazy-brush/lib/Point.js","webpack:///./node_modules/catenary-curve/lib/Point.js","webpack:///./src/index.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/lazy-brush/lib/index.js","webpack:///./node_modules/lazy-brush/lib/LazyBrush.js","webpack:///./node_modules/catenary-curve/lib/index.js","webpack:///./node_modules/catenary-curve/lib/Catenary.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/drawImage.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_5__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","obj","_createClass","defineProperties","target","props","length","descriptor","writable","key","Constructor","protoProps","staticProps","_Point2","_Point3","default","LazyPoint","_Point","instance","TypeError","_classCallCheck","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","arguments","subClass","superClass","create","constructor","setPrototypeOf","_inherits","point","x","y","angle","distance","angleRotated","Math","PI","sin","cos","diff","getDifferenceTo","sqrt","pow","atan2","Point","midPointBtw","p1","p2","canvasStyle","display","position","canvasTypes","zIndex","PropTypes","oneOfType","number","string","_default","_this","_PureComponent","componentWillUnmount","canvasObserver","unobserve","canvasContainer","drawImage","imgSrc","image","Image","src","onload","ctx","grid","img","undo","lines","slice","clear","simulateDrawingLines","immediate","triggerOnChange","getSaveData","JSON","stringify","width","canvasWidth","height","canvasHeight","loadSaveData","saveData","undefined","immediateLoading","Error","_JSON$parse","parse","push","scaleX","scaleY","scaleAvg","map","line","_extends","points","brushRadius","_ref","curTime","timeoutGap","loadTimeOffset","forEach","brushColor","_loop","window","setTimeout","drawPoints","saveLine","shouldTriggerOnChange","handleTouchStart","e","_this$getPointerPos","getPointerPos","lazy","update","both","handleMouseDown","mouseHasMoved","handleTouchMove","preventDefault","_this$getPointerPos2","handlePointerMove","handleTouchEnd","handleMouseUp","brush","getBrushCoordinates","isPressing","handleMouseMove","_this$getPointerPos3","isDrawing","handleCanvasResize","entries","observer","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","done","_entry$contentRect","contentRect","setCanvasSize","canvas","interface","drawing","temp","drawGrid","loop","once","style","rect","getBoundingClientRect","clientX","clientY","changedTouches","left","top","disabled","hasChanged","isDisabled","isEnabled","toObject","brushHasMoved","_ref3","lineJoin","lineCap","strokeStyle","clearRect","lineWidth","moveTo","beginPath","len","midPoint","quadraticCurveTo","lineTo","stroke","_ref4","onChange","valuesChanged","_ref5$once","getPointerCoordinates","requestAnimationFrame","hideGrid","setLineDash","gridColor","countX","countY","drawInterface","pointer","fillStyle","arc","fill","catenaryColor","catenary","drawToCanvas","chainLength","Catenary","componentDidMount","_this2","LazyBrush","radius","lazyRadius","devicePixelRatio","enabled","initialPoint","innerWidth","innerHeight","ResizeObserver","observe","initX","initY","componentDidUpdate","prevProps","setRadius","render","_this3","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","className","background","backgroundColor","touchAction","ref","container","_ref6","isInterface","getContext","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","PureComponent","defaultProps","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bool","func","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","shape","exact","checkPropTypes","_LazyBrush2","_interopRequireDefault","_LazyPoint2","_LazyPoint","RADIUS_DEFAULT","_ref$radius","_ref$enabled","_ref$initialPoint","_isEnabled","_hasMoved","newPointerPoint","_ref2$both","equalsTo","getDistanceTo","getAngleTo","moveByAngle","_Catenary2","_ref$segments","segments","_ref$iterationLimit","iterationLimit","context","point1","point2","isFlipped","curveData","isStraight","h","v","getCatenaryParameter","log","cosh","offsetX","offsetY","getCurve","mx","my","drawLine","drawCurve","limit","acosh","prevx","count","abs","sinh","data","ox","oy","global","MapShim","Map","getIndex","arr","result","some","entry","index","class_1","__entries__","set","delete","splice","has","callback","_a","isBrowser","document","global$1","Function","requestAnimationFrame$1","bind","Date","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","keys","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","size","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","right","vertPad","bottom","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","Constr","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","clearActive","observation","WeakMap","method","__webpack_exports__","g","eval","w","cx","cy","cw","ch","iw","ih","r","min","nw","nh","ar"],"mappings":"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","file":"react-canvas-draw.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCanvasDraw\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactCanvasDraw\"] = factory(root[\"React\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d40b1113758e69b41624","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Point2 = require('./Point');\n\nvar _Point3 = _interopRequireDefault(_Point2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LazyPoint = function (_Point) {\n  _inherits(LazyPoint, _Point);\n\n  function LazyPoint() {\n    _classCallCheck(this, LazyPoint);\n\n    return _possibleConstructorReturn(this, (LazyPoint.__proto__ || Object.getPrototypeOf(LazyPoint)).apply(this, arguments));\n  }\n\n  _createClass(LazyPoint, [{\n    key: 'update',\n\n    /**\n     * Update the x and y values\n     *\n     * @param {Point} point\n     */\n    value: function update(point) {\n      this.x = point.x;\n      this.y = point.y;\n    }\n\n    /**\n     * Move the point to another position using an angle and distance\n     *\n     * @param {number} angle The angle in radians\n     * @param {number} distance How much the point should be moved\n     */\n\n  }, {\n    key: 'moveByAngle',\n    value: function moveByAngle(angle, distance) {\n      // Rotate the angle based on the browser coordinate system ([0,0] in the top left)\n      var angleRotated = angle + Math.PI / 2;\n\n      this.x = this.x + Math.sin(angleRotated) * distance, this.y = this.y - Math.cos(angleRotated) * distance;\n    }\n\n    /**\n     * Check if this point is the same as another point\n     *\n     * @param {Point} point\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'equalsTo',\n    value: function equalsTo(point) {\n      return this.x === point.x && this.y === point.y;\n    }\n\n    /**\n     * Get the difference for x and y axis to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getDifferenceTo',\n    value: function getDifferenceTo(point) {\n      return new _Point3.default(this.x - point.x, this.y - point.y);\n    }\n\n    /**\n     * Calculate distance to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getDistanceTo',\n    value: function getDistanceTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.sqrt(Math.pow(diff.x, 2) + Math.pow(diff.y, 2));\n    }\n\n    /**\n     * Calculate the angle to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getAngleTo',\n    value: function getAngleTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.atan2(diff.y, diff.x);\n    }\n\n    /**\n     * Return a simple object with x and y properties\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'toObject',\n    value: function toObject() {\n      return {\n        x: this.x,\n        y: this.y\n      };\n    }\n  }]);\n\n  return LazyPoint;\n}(_Point3.default);\n\nexports.default = LazyPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lazy-brush/lib/LazyPoint.js\n// module id = 0\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Point =\n/**\n *\n * @param {number} x\n * @param {number} y\n */\nfunction Point(x, y) {\n  _classCallCheck(this, Point);\n\n  this.x = x;\n  this.y = y;\n};\n\nexports.default = Point;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lazy-brush/lib/Point.js\n// module id = 1\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Point = function () {\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   */\n  function Point(x, y) {\n    _classCallCheck(this, Point);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Update the x and y values\n   *\n   * @param {Point} point\n   */\n\n\n  _createClass(Point, [{\n    key: \"update\",\n    value: function update(point) {\n      this.x = point.x;\n      this.y = point.y;\n    }\n\n    /**\n     * Get the difference for x and y axis to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: \"getDifferenceTo\",\n    value: function getDifferenceTo(point) {\n      return new Point(this.x - point.x, this.y - point.y);\n    }\n\n    /**\n     * Calculate distance to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: \"getDistanceTo\",\n    value: function getDistanceTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.sqrt(Math.pow(diff.x, 2) + Math.pow(diff.y, 2));\n    }\n  }]);\n\n  return Point;\n}();\n\nexports.default = Point;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/catenary-curve/lib/Point.js\n// module id = 2\n// module chunks = 0","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LazyBrush } from \"lazy-brush\";\r\nimport { Catenary } from \"catenary-curve\";\r\n\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\nimport drawImage from \"./drawImage\";\r\n\r\nfunction midPointBtw(p1, p2) {\r\n  return {\r\n    x: p1.x + (p2.x - p1.x) / 2,\r\n    y: p1.y + (p2.y - p1.y) / 2\r\n  };\r\n}\r\n\r\nconst canvasStyle = {\r\n  display: \"block\",\r\n  position: \"absolute\"\r\n};\r\n\r\nconst canvasTypes = [\r\n  {\r\n    name: \"interface\",\r\n    zIndex: 15\r\n  },\r\n  {\r\n    name: \"drawing\",\r\n    zIndex: 11\r\n  },\r\n  {\r\n    name: \"temp\",\r\n    zIndex: 12\r\n  },\r\n  {\r\n    name: \"grid\",\r\n    zIndex: 10\r\n  }\r\n];\r\n\r\nconst dimensionsPropTypes = PropTypes.oneOfType([\r\n  PropTypes.number,\r\n  PropTypes.string\r\n]);\r\n\r\nexport default class extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func,\r\n    loadTimeOffset: PropTypes.number,\r\n    lazyRadius: PropTypes.number,\r\n    brushRadius: PropTypes.number,\r\n    brushColor: PropTypes.string,\r\n    catenaryColor: PropTypes.string,\r\n    gridColor: PropTypes.string,\r\n    backgroundColor: PropTypes.string,\r\n    hideGrid: PropTypes.bool,\r\n    canvasWidth: dimensionsPropTypes,\r\n    canvasHeight: dimensionsPropTypes,\r\n    disabled: PropTypes.bool,\r\n    imgSrc: PropTypes.string,\r\n    saveData: PropTypes.string,\r\n    immediateLoading: PropTypes.bool\r\n  };\r\n\r\n  static defaultProps = {\r\n    onChange: null,\r\n    loadTimeOffset: 5,\r\n    lazyRadius: 12,\r\n    brushRadius: 10,\r\n    brushColor: \"#444\",\r\n    catenaryColor: \"#0a0302\",\r\n    gridColor: \"rgba(150,150,150,0.17)\",\r\n    backgroundColor: \"#FFF\",\r\n    hideGrid: false,\r\n    canvasWidth: 400,\r\n    canvasHeight: 400,\r\n    disabled: false,\r\n    imgSrc: \"\",\r\n    saveData: \"\",\r\n    immediateLoading: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.canvas = {};\r\n    this.ctx = {};\r\n\r\n    this.catenary = new Catenary();\r\n\r\n    this.points = [];\r\n    this.lines = [];\r\n\r\n    this.mouseHasMoved = true;\r\n    this.valuesChanged = true;\r\n    this.isDrawing = false;\r\n    this.isPressing = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.lazy = new LazyBrush({\r\n      radius: this.props.lazyRadius * window.devicePixelRatio,\r\n      enabled: true,\r\n      initialPoint: {\r\n        x: window.innerWidth / 2,\r\n        y: window.innerHeight / 2\r\n      }\r\n    });\r\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\r\n\r\n    this.canvasObserver = new ResizeObserver((entries, observer) =>\r\n      this.handleCanvasResize(entries, observer)\r\n    );\r\n    this.canvasObserver.observe(this.canvasContainer);\r\n\r\n    this.drawImage();\r\n    this.loop();\r\n\r\n    window.setTimeout(() => {\r\n      const initX = window.innerWidth / 2;\r\n      const initY = window.innerHeight / 2;\r\n      this.lazy.update(\r\n        { x: initX - this.chainLength / 4, y: initY },\r\n        { both: true }\r\n      );\r\n      this.lazy.update(\r\n        { x: initX + this.chainLength / 4, y: initY },\r\n        { both: false }\r\n      );\r\n      this.mouseHasMoved = true;\r\n      this.valuesChanged = true;\r\n      this.clear();\r\n\r\n      // Load saveData from prop if it exists\r\n      if (this.props.saveData) {\r\n        this.loadSaveData(this.props.saveData);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\r\n      // Set new lazyRadius values\r\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\r\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\r\n    }\r\n\r\n    if (prevProps.saveData !== this.props.saveData) {\r\n      this.loadSaveData(this.props.saveData);\r\n    }\r\n\r\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\r\n      // Signal this.loop function that values changed\r\n      this.valuesChanged = true;\r\n    }\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.canvasObserver.unobserve(this.canvasContainer);\r\n  };\r\n\r\n  drawImage = () => {\r\n    if (!this.props.imgSrc) return;\r\n\r\n    // Load the image\r\n    this.image = new Image();\r\n    this.image.src = this.props.imgSrc;\r\n\r\n    // Draw the image once loaded\r\n    this.image.onload = () =>\r\n      drawImage({ ctx: this.ctx.grid, img: this.image });\r\n  };\r\n\r\n  undo = () => {\r\n    const lines = this.lines.slice(0, -1);\r\n    this.clear();\r\n    this.simulateDrawingLines({ lines, immediate: true });\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  getSaveData = () => {\r\n    // Construct and return the stringified saveData object\r\n    return JSON.stringify({\r\n      lines: this.lines,\r\n      width: this.props.canvasWidth,\r\n      height: this.props.canvasHeight\r\n    });\r\n  };\r\n\r\n  loadSaveData = (saveData, immediate = this.props.immediateLoading) => {\r\n    if (typeof saveData !== \"string\") {\r\n      throw new Error(\"saveData needs to be of type string!\");\r\n    }\r\n\r\n    const { lines, width, height } = JSON.parse(saveData);\r\n\r\n    if (!lines || typeof lines.push !== \"function\") {\r\n      throw new Error(\"saveData.lines needs to be an array!\");\r\n    }\r\n\r\n    this.clear();\r\n\r\n    if (\r\n      width === this.props.canvasWidth &&\r\n      height === this.props.canvasHeight\r\n    ) {\r\n      this.simulateDrawingLines({\r\n        lines,\r\n        immediate\r\n      });\r\n    } else {\r\n      // we need to rescale the lines based on saved & current dimensions\r\n      const scaleX = this.props.canvasWidth / width;\r\n      const scaleY = this.props.canvasHeight / height;\r\n      const scaleAvg = (scaleX + scaleY) / 2;\r\n\r\n      this.simulateDrawingLines({\r\n        lines: lines.map(line => ({\r\n          ...line,\r\n          points: line.points.map(p => ({\r\n            x: p.x * scaleX,\r\n            y: p.y * scaleY\r\n          })),\r\n          brushRadius: line.brushRadius * scaleAvg\r\n        })),\r\n        immediate\r\n      });\r\n    }\r\n  };\r\n\r\n  simulateDrawingLines = ({ lines, immediate }) => {\r\n    // Simulate live-drawing of the loaded lines\r\n    // TODO use a generator\r\n    let curTime = 0;\r\n    let timeoutGap = immediate ? 0 : this.props.loadTimeOffset;\r\n\r\n    lines.forEach(line => {\r\n      const { points, brushColor, brushRadius } = line;\r\n\r\n      for (let i = 1; i < points.length; i++) {\r\n        curTime += timeoutGap;\r\n        window.setTimeout(() => {\r\n          this.drawPoints({\r\n            points: points.slice(0, i + 1),\r\n            brushColor,\r\n            brushRadius\r\n          });\r\n        }, curTime);\r\n      }\r\n\r\n      curTime += timeoutGap;\r\n      window.setTimeout(() => {\r\n        // Save this line with its props instead of this.props\r\n        this.points = points;\r\n        let shouldTriggerOnChange = false;\r\n        this.saveLine({ brushColor, brushRadius, shouldTriggerOnChange });\r\n      }, curTime);\r\n    });\r\n  };\r\n\r\n  handleTouchStart = e => {\r\n    const { x, y } = this.getPointerPos(e);\r\n    this.lazy.update({ x, y }, { both: true });\r\n    this.handleMouseDown(e);\r\n\r\n    this.mouseHasMoved = true;\r\n  };\r\n\r\n  handleTouchMove = e => {\r\n    e.preventDefault();\r\n    const { x, y } = this.getPointerPos(e);\r\n    this.handlePointerMove(x, y);\r\n  };\r\n\r\n  handleTouchEnd = e => {\r\n    this.handleMouseUp(e);\r\n    const brush = this.lazy.getBrushCoordinates();\r\n    this.lazy.update({ x: brush.x, y: brush.y }, { both: true });\r\n    this.mouseHasMoved = true;\r\n  };\r\n\r\n  handleMouseDown = e => {\r\n    e.preventDefault();\r\n    this.isPressing = true;\r\n  };\r\n\r\n  handleMouseMove = e => {\r\n    const { x, y } = this.getPointerPos(e);\r\n    this.handlePointerMove(x, y);\r\n  };\r\n\r\n  handleMouseUp = e => {\r\n    e.preventDefault();\r\n    this.isDrawing = false;\r\n    this.isPressing = false;\r\n\r\n    this.saveLine();\r\n  };\r\n\r\n  handleCanvasResize = (entries, observer) => {\r\n    const saveData = this.getSaveData();\r\n    for (const entry of entries) {\r\n      const { width, height } = entry.contentRect;\r\n      this.setCanvasSize(this.canvas.interface, width, height);\r\n      this.setCanvasSize(this.canvas.drawing, width, height);\r\n      this.setCanvasSize(this.canvas.temp, width, height);\r\n      this.setCanvasSize(this.canvas.grid, width, height);\r\n\r\n      this.drawGrid(this.ctx.grid);\r\n      this.loop({ once: true });\r\n    }\r\n    this.loadSaveData(saveData, true);\r\n  };\r\n\r\n  setCanvasSize = (canvas, width, height) => {\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    canvas.style.width = width;\r\n    canvas.style.height = height;\r\n  };\r\n\r\n  getPointerPos = e => {\r\n    const rect = this.canvas.interface.getBoundingClientRect();\r\n\r\n    // use cursor pos as default\r\n    let clientX = e.clientX;\r\n    let clientY = e.clientY;\r\n\r\n    // use first touch if available\r\n    if (e.changedTouches && e.changedTouches.length > 0) {\r\n      clientX = e.changedTouches[0].clientX;\r\n      clientY = e.changedTouches[0].clientY;\r\n    }\r\n\r\n    // return mouse/touch position inside canvas\r\n    return {\r\n      x: clientX - rect.left,\r\n      y: clientY - rect.top\r\n    };\r\n  };\r\n\r\n  handlePointerMove = (x, y) => {\r\n    if (this.props.disabled) return;\r\n\r\n    const hasChanged = this.lazy.update({ x, y });\r\n    const isDisabled = !this.lazy.isEnabled();\r\n\r\n    if (\r\n      (this.isPressing && hasChanged && !this.isDrawing) ||\r\n      (isDisabled && this.isPressing)\r\n    ) {\r\n      // Start drawing and add point\r\n      this.isDrawing = true;\r\n      this.points.push(this.lazy.brush.toObject());\r\n    }\r\n\r\n    if (this.isDrawing && (this.lazy.brushHasMoved() || isDisabled)) {\r\n      // Add new point\r\n      this.points.push(this.lazy.brush.toObject());\r\n\r\n      // Draw current points\r\n      this.drawPoints({\r\n        points: this.points,\r\n        brushColor: this.props.brushColor,\r\n        brushRadius: this.props.brushRadius\r\n      });\r\n    }\r\n\r\n    this.mouseHasMoved = true;\r\n  };\r\n\r\n  drawPoints = ({ points, brushColor, brushRadius }) => {\r\n    this.ctx.temp.lineJoin = \"round\";\r\n    this.ctx.temp.lineCap = \"round\";\r\n    this.ctx.temp.strokeStyle = brushColor;\r\n\r\n    this.ctx.temp.clearRect(\r\n      0,\r\n      0,\r\n      this.ctx.temp.canvas.width,\r\n      this.ctx.temp.canvas.height\r\n    );\r\n    this.ctx.temp.lineWidth = brushRadius * 2;\r\n\r\n    let p1 = points[0];\r\n    let p2 = points[1];\r\n\r\n    this.ctx.temp.moveTo(p2.x, p2.y);\r\n    this.ctx.temp.beginPath();\r\n\r\n    for (var i = 1, len = points.length; i < len; i++) {\r\n      // we pick the point between pi+1 & pi+2 as the\r\n      // end point and p1 as our control point\r\n      var midPoint = midPointBtw(p1, p2);\r\n      this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\r\n      p1 = points[i];\r\n      p2 = points[i + 1];\r\n    }\r\n    // Draw last line as a straight line while\r\n    // we wait for the next point to be able to calculate\r\n    // the bezier control point\r\n    this.ctx.temp.lineTo(p1.x, p1.y);\r\n    this.ctx.temp.stroke();\r\n  };\r\n\r\n  saveLine = ({ brushColor, brushRadius, shouldTriggerOnChange } = {}) => {\r\n    if (this.points.length < 2) return;\r\n\r\n    // Save as new line\r\n    this.lines.push({\r\n      points: [...this.points],\r\n      brushColor: brushColor || this.props.brushColor,\r\n      brushRadius: brushRadius || this.props.brushRadius\r\n    });\r\n\r\n    // Reset points array\r\n    this.points.length = 0;\r\n\r\n    const width = this.canvas.temp.width;\r\n    const height = this.canvas.temp.height;\r\n\r\n    // Copy the line to the drawing canvas\r\n    this.ctx.drawing.drawImage(this.canvas.temp, 0, 0, width, height);\r\n\r\n    // Clear the temporary line-drawing canvas\r\n    this.ctx.temp.clearRect(0, 0, width, height);\r\n\r\n    if (!shouldTriggerOnChange) {\r\n      return;\r\n    }\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  triggerOnChange = () => {\r\n    this.props.onChange && this.props.onChange(this);\r\n  };\r\n\r\n  clear = () => {\r\n    this.lines = [];\r\n    this.valuesChanged = true;\r\n    this.ctx.drawing.clearRect(\r\n      0,\r\n      0,\r\n      this.canvas.drawing.width,\r\n      this.canvas.drawing.height\r\n    );\r\n    this.ctx.temp.clearRect(\r\n      0,\r\n      0,\r\n      this.canvas.temp.width,\r\n      this.canvas.temp.height\r\n    );\r\n  };\r\n\r\n  loop = ({ once = false } = {}) => {\r\n    if (this.mouseHasMoved || this.valuesChanged) {\r\n      const pointer = this.lazy.getPointerCoordinates();\r\n      const brush = this.lazy.getBrushCoordinates();\r\n\r\n      // this.drawInterface(this.ctx.interface, pointer, brush);\r\n      this.mouseHasMoved = false;\r\n      this.valuesChanged = false;\r\n    }\r\n\r\n    if (!once) {\r\n      window.requestAnimationFrame(() => {\r\n        this.loop();\r\n      });\r\n    }\r\n  };\r\n\r\n  drawGrid = ctx => {\r\n    if (this.props.hideGrid) return;\r\n\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n    ctx.beginPath();\r\n    ctx.setLineDash([5, 1]);\r\n    ctx.setLineDash([]);\r\n    ctx.strokeStyle = this.props.gridColor;\r\n    ctx.lineWidth = 0.5;\r\n\r\n    const gridSize = 25;\r\n\r\n    let countX = 0;\r\n    while (countX < ctx.canvas.width) {\r\n      countX += gridSize;\r\n      ctx.moveTo(countX, 0);\r\n      ctx.lineTo(countX, ctx.canvas.height);\r\n    }\r\n    ctx.stroke();\r\n\r\n    let countY = 0;\r\n    while (countY < ctx.canvas.height) {\r\n      countY += gridSize;\r\n      ctx.moveTo(0, countY);\r\n      ctx.lineTo(ctx.canvas.width, countY);\r\n    }\r\n    ctx.stroke();\r\n  };\r\n\r\n  drawInterface = (ctx, pointer, brush) => {\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n    // Draw brush preview\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.brushColor;\r\n    ctx.arc(brush.x, brush.y, this.props.brushRadius, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n\r\n    // Draw mouse point (the one directly at the cursor)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.catenaryColor;\r\n    ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n\r\n    // Draw catenary\r\n    if (this.lazy.isEnabled()) {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = 2;\r\n      ctx.lineCap = \"round\";\r\n      ctx.setLineDash([2, 4]);\r\n      ctx.strokeStyle = this.props.catenaryColor;\r\n      this.catenary.drawToCanvas(\r\n        this.ctx.interface,\r\n        brush,\r\n        pointer,\r\n        this.chainLength\r\n      );\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw brush point (the one in the middle of the brush preview)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.catenaryColor;\r\n    ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.className}\r\n        style={{\r\n          display: \"block\",\r\n          background: this.props.backgroundColor,\r\n          touchAction: \"none\",\r\n          width: this.props.canvasWidth,\r\n          height: this.props.canvasHeight,\r\n          ...this.props.style\r\n        }}\r\n        ref={container => {\r\n          if (container) {\r\n            this.canvasContainer = container;\r\n          }\r\n        }}\r\n      >\r\n        {canvasTypes.map(({ name, zIndex }) => {\r\n          const isInterface = name === \"interface\";\r\n          return (\r\n            <canvas\r\n              key={name}\r\n              ref={canvas => {\r\n                if (canvas) {\r\n                  this.canvas[name] = canvas;\r\n                  this.ctx[name] = canvas.getContext(\"2d\");\r\n                }\r\n              }}\r\n              style={{ ...canvasStyle, zIndex }}\r\n              onMouseDown={isInterface ? this.handleMouseDown : undefined}\r\n              onMouseMove={isInterface ? this.handleMouseMove : undefined}\r\n              onMouseUp={isInterface ? this.handleMouseUp : undefined}\r\n              onMouseOut={isInterface ? this.handleMouseUp : undefined}\r\n              onTouchStart={isInterface ? this.handleTouchStart : undefined}\r\n              onTouchMove={isInterface ? this.handleTouchMove : undefined}\r\n              onTouchEnd={isInterface ? this.handleTouchEnd : undefined}\r\n              onTouchCancel={isInterface ? this.handleTouchEnd : undefined}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 5\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/index.js\n// module id = 6\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithThrowingShims.js\n// module id = 7\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LazyPoint = exports.Point = exports.LazyBrush = undefined;\n\nvar _LazyBrush = require('./LazyBrush');\n\nvar _LazyBrush2 = _interopRequireDefault(_LazyBrush);\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nvar _LazyPoint = require('./LazyPoint');\n\nvar _LazyPoint2 = _interopRequireDefault(_LazyPoint);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.LazyBrush = _LazyBrush2.default;\nexports.Point = _Point2.default;\nexports.LazyPoint = _LazyPoint2.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lazy-brush/lib/index.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _LazyPoint = require('./LazyPoint');\n\nvar _LazyPoint2 = _interopRequireDefault(_LazyPoint);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RADIUS_DEFAULT = 30;\n\nvar LazyBrush = function () {\n  /**\n   * constructor\n   *\n   * @param {object} settings\n   * @param {number} settings.radius The radius for the lazy area\n   * @param {boolean} settings.enabled\n   */\n  function LazyBrush() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$radius = _ref.radius,\n        radius = _ref$radius === undefined ? RADIUS_DEFAULT : _ref$radius,\n        _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === undefined ? true : _ref$enabled,\n        _ref$initialPoint = _ref.initialPoint,\n        initialPoint = _ref$initialPoint === undefined ? { x: 0, y: 0 } : _ref$initialPoint;\n\n    _classCallCheck(this, LazyBrush);\n\n    this.radius = radius;\n    this._isEnabled = enabled;\n\n    this.pointer = new _LazyPoint2.default(initialPoint.x, initialPoint.y);\n    this.brush = new _LazyPoint2.default(initialPoint.x, initialPoint.y);\n\n    this.angle = 0;\n    this.distance = 0;\n    this._hasMoved = false;\n  }\n\n  /**\n   * Enable lazy brush calculations.\n   *\n   */\n\n\n  _createClass(LazyBrush, [{\n    key: 'enable',\n    value: function enable() {\n      this._isEnabled = true;\n    }\n\n    /**\n     * Disable lazy brush calculations.\n     *\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this._isEnabled = false;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isEnabled',\n    value: function isEnabled() {\n      return this._isEnabled;\n    }\n\n    /**\n     * Update the radius\n     *\n     * @param {number} radius\n     */\n\n  }, {\n    key: 'setRadius',\n    value: function setRadius(radius) {\n      this.radius = radius;\n    }\n\n    /**\n     * Return the current radius\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: 'getRadius',\n    value: function getRadius() {\n      return this.radius;\n    }\n\n    /**\n     * Return the brush coordinates as a simple object\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'getBrushCoordinates',\n    value: function getBrushCoordinates() {\n      return this.brush.toObject();\n    }\n\n    /**\n     * Return the pointer coordinates as a simple object\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'getPointerCoordinates',\n    value: function getPointerCoordinates() {\n      return this.pointer.toObject();\n    }\n\n    /**\n     * Return the brush as a LazyPoint\n     *\n     * @returns {LazyPoint}\n     */\n\n  }, {\n    key: 'getBrush',\n    value: function getBrush() {\n      return this.brush;\n    }\n\n    /**\n     * Return the pointer as a LazyPoint\n     *\n     * @returns {LazyPoint}\n     */\n\n  }, {\n    key: 'getPointer',\n    value: function getPointer() {\n      return this.pointer;\n    }\n\n    /**\n     * Return the angle between pointer and brush\n     *\n     * @returns {number} Angle in radians\n     */\n\n  }, {\n    key: 'getAngle',\n    value: function getAngle() {\n      return this.angle;\n    }\n\n    /**\n     * Return the distance between pointer and brush\n     *\n     * @returns {number} Distance in pixels\n     */\n\n  }, {\n    key: 'getDistance',\n    value: function getDistance() {\n      return this.distance;\n    }\n\n    /**\n     * Return if the previous update has moved the brush.\n     *\n     * @returns {boolean} Whether the brush moved previously.\n     */\n\n  }, {\n    key: 'brushHasMoved',\n    value: function brushHasMoved() {\n      return this._hasMoved;\n    }\n\n    /**\n     * Updates the pointer point and calculates the new brush point.\n     *\n     * @param {Point} newPointerPoint\n     * @param {Object} options\n     * @param {Boolean} options.both Force update pointer and brush\n     * @returns {Boolean} Whether any of the two points changed\n     */\n\n  }, {\n    key: 'update',\n    value: function update(newPointerPoint) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref2$both = _ref2.both,\n          both = _ref2$both === undefined ? false : _ref2$both;\n\n      this._hasMoved = false;\n      if (this.pointer.equalsTo(newPointerPoint) && !both) {\n        return false;\n      }\n\n      this.pointer.update(newPointerPoint);\n\n      if (both) {\n        this._hasMoved = true;\n        this.brush.update(newPointerPoint);\n        return true;\n      }\n\n      if (this._isEnabled) {\n        this.distance = this.pointer.getDistanceTo(this.brush);\n        this.angle = this.pointer.getAngleTo(this.brush);\n\n        if (this.distance > this.radius) {\n          this.brush.moveByAngle(this.angle, this.distance - this.radius);\n          this._hasMoved = true;\n        }\n      } else {\n        this.distance = 0;\n        this.angle = 0;\n        this.brush.update(newPointerPoint);\n        this._hasMoved = true;\n      }\n\n      return true;\n    }\n  }]);\n\n  return LazyBrush;\n}();\n\nexports.default = LazyBrush;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lazy-brush/lib/LazyBrush.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Point = exports.Catenary = undefined;\n\nvar _Catenary = require('./Catenary');\n\nvar _Catenary2 = _interopRequireDefault(_Catenary);\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Catenary = _Catenary2.default;\nexports.Point = _Point2.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/catenary-curve/lib/index.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\niven two points and a length, calculate and draw the catenary.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * \navaScript implementation:\nopyright (c) 2018 Jan Hug <me@dulnan.net>\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Released under the MIT license.\nnnnriginal ActionScript implementation:\nopyright poiasd ( http://wonderfl.net/user/poiasd )\nicense ( http://www.opensource.org/licenses/mit-license.php )\nownloaded from: http://wonderfl.net/c/8Bnl\nnnnrchived by and downloaded from:\nhttp://wa.zozuar.org/code.php?c=8Bnl\nn\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EPSILON = 1e-6;\n\nvar Catenary = function () {\n  /**\n   * constructor\n   *\n   * @param {Object} settings\n   * @param {Number} settings.segments Number of segments of the chain.\n   * @param {Number} settings.iterationLimit Maximum amount iterations for getting catenary parameters.\n   */\n  function Catenary() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$segments = _ref.segments,\n        segments = _ref$segments === undefined ? 50 : _ref$segments,\n        _ref$iterationLimit = _ref.iterationLimit,\n        iterationLimit = _ref$iterationLimit === undefined ? 100 : _ref$iterationLimit;\n\n    _classCallCheck(this, Catenary);\n\n    this.p1 = new _Point2.default();\n    this.p2 = new _Point2.default();\n\n    this.segments = segments;\n    this.iterationLimit = iterationLimit;\n  }\n\n  /**\n   * Draws a catenary given two coordinates, a length and a context.\n   * \n   * @param {CanvasRenderingContext2D} context The canvas context to draw the catenary on to.\n   * @param {Point} p1 First point\n   * @param {Point} p2 Second point\n   * @param {Number} chainLength The length of the catenary\n   */\n\n\n  _createClass(Catenary, [{\n    key: 'drawToCanvas',\n    value: function drawToCanvas(context, point1, point2, chainLength) {\n      this.p1.update(point1);\n      this.p2.update(point2);\n\n      var isFlipped = this.p1.x > this.p2.x;\n\n      var p1 = isFlipped ? this.p2 : this.p1;\n      var p2 = isFlipped ? this.p1 : this.p2;\n\n      var distance = p1.getDistanceTo(p2);\n\n      var curveData = [];\n      var isStraight = true;\n\n      // Prevent \"expensive\" catenary calculations if it would only result\n      // in a straight line.\n      if (distance < chainLength) {\n        var diff = p2.x - p1.x;\n\n        // If the distance on the x axis of both points is too small, don't\n        // calculate a catenary.\n        if (diff > 0.01) {\n          var h = p2.x - p1.x;\n          var v = p2.y - p1.y;\n          var a = -this.getCatenaryParameter(h, v, chainLength, this.iterationLimit);\n          var x = (a * Math.log((chainLength + v) / (chainLength - v)) - h) * 0.5;\n          var y = a * Math.cosh(x / a);\n          var offsetX = p1.x - x;\n          var offsetY = p1.y - y;\n          curveData = this.getCurve(a, p1, p2, offsetX, offsetY, this.segments);\n          isStraight = false;\n        } else {\n          var mx = (p1.x + p2.x) * 0.5;\n          var my = (p1.y + p2.y + chainLength) * 0.5;\n\n          curveData = [[p1.x, p1.y], [mx, my], [p2.x, p2.y]];\n        }\n      } else {\n        curveData = [[p1.x, p1.y], [p2.x, p2.y]];\n      }\n\n      if (isStraight) {\n        this.drawLine(curveData, context);\n      } else {\n        this.drawCurve(curveData, context);\n      }\n\n      return curveData;\n    }\n\n    /**\n     * Determines catenary parameter.\n     * \n     * @param {Number} h Horizontal distance of both points.\n     * @param {Number} v Vertical distance of both points.\n     * @param {Number} length The catenary length.\n     * @param {Number} limit Maximum amount of iterations to find parameter.\n     */\n\n  }, {\n    key: 'getCatenaryParameter',\n    value: function getCatenaryParameter(h, v, length, limit) {\n      var m = Math.sqrt(length * length - v * v) / h;\n      var x = Math.acosh(m) + 1;\n      var prevx = -1;\n      var count = 0;\n\n      while (Math.abs(x - prevx) > EPSILON && count < limit) {\n        prevx = x;\n        x = x - (Math.sinh(x) - m * x) / (Math.cosh(x) - m);\n        count++;\n      }\n\n      return h / (2 * x);\n    }\n\n    /**\n     * Calculate the catenary curve.\n     * Increasing the segments value will produce a catenary closer\n     * to reality, but will require more calcluations.\n     * \n     * @param {Number} a The catenary parameter.\n     * @param {Point} p1 First point\n     * @param {Point} p2 Second point\n     * @param {Number} offsetX The calculated offset on the x axis.\n     * @param {Number} offsetY The calculated offset on the y axis.\n     * @param {Number} segments How many \"parts\" the chain should be made of.\n     */\n\n  }, {\n    key: 'getCurve',\n    value: function getCurve(a, p1, p2, offsetX, offsetY, segments) {\n      var data = [p1.x, a * Math.cosh((p1.x - offsetX) / a) + offsetY];\n\n      var d = p2.x - p1.x;\n      var length = segments - 1;\n\n      for (var i = 0; i < length; i++) {\n        var x = p1.x + d * (i + 0.5) / length;\n        var y = a * Math.cosh((x - offsetX) / a) + offsetY;\n        data.push(x, y);\n      }\n\n      data.push(p2.x, a * Math.cosh((p2.x - offsetX) / a) + offsetY);\n\n      return data;\n    }\n\n    /**\n     * Draws a straight line between two points.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     */\n\n  }, {\n    key: 'drawLine',\n    value: function drawLine(data, context) {\n      context.moveTo(data[0][0], data[0][1]);\n\n      context.lineTo(data[1][0], data[1][1]);\n    }\n\n    /**\n     * Draws a quadratic curve between every calculated catenary segment,\n     * so that the segments don't look like straight lines.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     * \n     * @returns {Array} The original segment coordinates.\n     */\n\n  }, {\n    key: 'drawCurve',\n    value: function drawCurve(data, context) {\n      var length = data.length * 0.5 - 1;\n      var ox = data[2];\n      var oy = data[3];\n\n      var temp = [];\n\n      context.moveTo(data[0], data[1]);\n\n      for (var i = 2; i < length; i++) {\n        var x = data[i * 2];\n        var y = data[i * 2 + 1];\n        var mx = (x + ox) * 0.5;\n        var my = (y + oy) * 0.5;\n        temp.push([ox, oy, mx, my]);\n        context.quadraticCurveTo(ox, oy, mx, my);\n        ox = x;\n        oy = y;\n      }\n\n      length = data.length;\n      context.quadraticCurveTo(data[length - 4], data[length - 3], data[length - 2], data[length - 1]);\n\n      return temp;\n    }\n  }]);\n\n  return Catenary;\n}();\n\nexports.default = Catenary;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/catenary-curve/lib/Catenary.js\n// module id = 12\n// module chunks = 0","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\n// module id = 13\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 14\n// module chunks = 0","/** \r\n * Original from: https://stackoverflow.com/questions/21961839/simulation-background-size-cover-in-canvas\r\n * Original By Ken Fyrstenberg Nilsen\r\n * \r\n * Note: img must be fully loaded or have correct width & height set.\r\n */\r\nexport default function drawImageProp({ctx, img, x, y, w, h, offsetX, offsetY} = {}) {\r\n  // Defaults\r\n  if (typeof x !== \"number\") x = 0;\r\n  if (typeof y !== \"number\") y = 0;\r\n  if (typeof w !== \"number\") w = ctx.canvas.width;\r\n  if (typeof h !== \"number\") h = ctx.canvas.height;\r\n  if (typeof offsetX !== \"number\") offsetX = 0.5;\r\n  if (typeof offsetY !== \"number\") offsetY = 0.5;\r\n\r\n  // keep bounds [0.0, 1.0]\r\n  if (offsetX < 0) offsetX = 0;\r\n  if (offsetY < 0) offsetY = 0;\r\n  if (offsetX > 1) offsetX = 1;\r\n  if (offsetY > 1) offsetY = 1;\r\n\r\n  var iw = img.width,\r\n    ih = img.height,\r\n    r = Math.min(w / iw, h / ih),\r\n    nw = iw * r, // new prop. width\r\n    nh = ih * r, // new prop. height\r\n    cx,\r\n    cy,\r\n    cw,\r\n    ch,\r\n    ar = 1;\r\n\r\n  // decide which gap to fill\r\n  if (nw < w) ar = w / nw;\r\n  if (Math.abs(ar - 1) < 1e-14 && nh < h) ar = h / nh; // updated\r\n  nw *= ar;\r\n  nh *= ar;\r\n\r\n  // calc source rectangle\r\n  cw = iw / (nw / w);\r\n  ch = ih / (nh / h);\r\n\r\n  cx = (iw - cw) * offsetX;\r\n  cy = (ih - ch) * offsetY;\r\n\r\n  // make sure source rectangle is valid\r\n  if (cx < 0) cx = 0;\r\n  if (cy < 0) cy = 0;\r\n  if (cw > iw) cw = iw;\r\n  if (ch > ih) ch = ih;\r\n\r\n  // fill image in dest. rectangle\r\n  ctx.drawImage(img, cx, cy, cw, ch, x, y, w, h);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawImage.js"],"sourceRoot":""}